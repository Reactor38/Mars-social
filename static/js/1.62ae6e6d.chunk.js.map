{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItems","active","messages","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","Object","C_Users_Komp_Desktop_ReactRedux_Mars_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Komp_Desktop_ReactRedux_Mars_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Komp_Desktop_ReactRedux_Mars_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","C_Users_Komp_Desktop_ReactRedux_Mars_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_Komp_Desktop_ReactRedux_Mars_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","React","connect","DialogItem","path","id","react_default","className","s","dialog","src","avatar","alt","react_router_dom","name","Message","message","maxLength30","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","spellCheck","component","Textarea","validate","required","Dialogs","dialogsPage","dialogsElements","map","d","Dialogs_DialogItem_DialogItem","messagesElements","m","Dialogs_Message_Message","values","sendMessage","newMessageBody","react_router","mapStateToProps","mapDispatchToProps","dispatch","sendMessageActionCreator","compose"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,OAAA,wBAAAC,SAAA,wKCGdC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAc,IACrCC,EADqC,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAGnC,OAAKR,KAAKS,MAAMjB,OAETkB,EAAAC,EAAAC,cAACjB,EAAcK,KAAKS,OAFIC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUC,GAAG,eAHTlB,EAAA,CACXmB,IAAMpB,WAUtC,OAFqCqB,YAAQ1B,EAAR0B,CAAoCpB,4GCA9DqB,EAZI,SAACR,GAEhB,IAAIS,EAAO,YAAcT,EAAMU,GAE/B,OACIC,EAAAT,EAAAC,cAAA,OAAKS,UAAWC,IAAEC,OAAS,IAAMD,IAAElC,QAC/BgC,EAAAT,EAAAC,cAAA,OAAKY,IAAKC,IAAQC,IAAI,WACtBN,EAAAT,EAAAC,cAACe,EAAA,EAAD,CAASb,GAAII,GAAOT,EAAMmB,QCJvBC,EAJC,SAACpB,GACb,OAAOW,EAAAT,EAAAC,cAAA,OAAKS,UAAWC,IAAEQ,SAAUrB,EAAMqB,iDCIvCC,EAAcC,YAAiB,IAoB/BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,CAlBL,SAACzB,GACpB,OACIW,EAAAT,EAAAC,cAAA,QAAMwB,SAAU3B,EAAM4B,cAClBjB,EAAAT,EAAAC,cAAA,WACIQ,EAAAT,EAAAC,cAAC0B,EAAA,EAAD,CACIC,YAAY,qBACZX,KAAK,iBACLY,WAAW,QACXC,UAAWC,IACXC,SAAU,CAACC,IAAUb,MAE7BX,EAAAT,EAAAC,cAAA,WACIQ,EAAAT,EAAAC,cAAA,0BAmCDiC,EA3BC,SAACpC,GAEb,IAAIlB,EAAQkB,EAAMqC,YAEdC,EAAkBxD,EAAML,QAAQ8D,IAAI,SAAAC,GAAC,OAAI7B,EAAAT,EAAAC,cAACsC,EAAD,CAAY3C,IAAK0C,EAAE9B,GAAIS,KAAMqB,EAAErB,KAAMT,GAAI8B,EAAE9B,OAEpFgC,EAAmB5D,EAAMF,SAAS2D,IAAI,SAAAI,GAAC,OAAIhC,EAAAT,EAAAC,cAACyC,EAAD,CAAS9C,IAAK6C,EAAEjC,GAAIW,QAASsB,EAAEtB,YAM9E,OAAKrB,EAAMjB,OAGP4B,EAAAT,EAAAC,cAAA,OAAKS,UAAWC,IAAEpC,SACdkC,EAAAT,EAAAC,cAAA,OAAKS,UAAWC,IAAEnC,cACb4D,GAEL3B,EAAAT,EAAAC,cAAA,OAAKS,UAAWC,IAAEjC,UACd+B,EAAAT,EAAAC,cAAA,WAAMuC,IAEV/B,EAAAT,EAAAC,cAACqB,EAAD,CAAqBG,SAdP,SAACkB,GACnB7C,EAAM8C,YAAYD,EAAOE,oBAGHpC,EAAAT,EAAAC,cAAC6C,EAAA,EAAD,CAAU3C,GAAG,4CCrCvC4C,EAAkB,SAACnE,GACnB,MAAO,CACHuD,YAAavD,EAAMuD,cAIvBa,EAAqB,SAACC,GACtB,MAAO,CACHL,YAAa,SAACC,GACVI,EAASC,YAAyBL,OAK9CM,YACI9C,YAAQ0C,EAAiBC,GACzBjE,IAFJoE,CAGEjB,GAEaiB,sBACX9C,YAAQ0C,EAAiBC,GACzBjE,IAFWoE,CAGbjB","file":"static/js/1.62ae6e6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__Lq149\",\"dialogsItems\":\"Dialogs_dialogsItems__UHFwp\",\"active\":\"Dialogs_active__exicw\",\"messages\":\"Dialogs_messages__DKa24\"};","import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport avatar from '../../../assets/images/Avatar.png'\r\n\r\nconst DialogItem = (props) => {\r\n\r\n    let path = '/dialogs/' + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <img src={avatar} alt=\"Avatar\" />\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators';\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    placeholder=\"Enter your message\"\r\n                    name=\"newMessageBody\"\r\n                    spellCheck=\"false\"\r\n                    component={Textarea}\r\n                    validate={[required, maxLength30]} />\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm)\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem key={d.id} name={d.name} id={d.id} />);\r\n\r\n    let messagesElements = state.messages.map(m => <Message key={m.id} message={m.message} />);\r\n\r\n    const addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Navigate to=\"/login\" />\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n            </div>\r\n            <AddMessageReduxForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import Dialogs from './Dialogs';\r\nimport { sendMessageActionCreator } from '../../redux/dialogsReducer';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageActionCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\ncompose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}