{"version":3,"sources":["components/hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","Object","C_Users_Komp_Desktop_ReactRedux_Mars_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Komp_Desktop_ReactRedux_Mars_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Komp_Desktop_ReactRedux_Mars_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","C_Users_Komp_Desktop_ReactRedux_Mars_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_Komp_Desktop_ReactRedux_Mars_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","React","connect","module","exports","descriptionBlock","contact","formSummaryError","postsBlock","posts","item","Post","react_default","className","s","src","avatar","alt","message","likesCount","maxLength40","maxLengthCreator","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","spellCheck","validate","required","MyPosts","memo","postsElements","map","p","MyPosts_Post_Post","id","values","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostActionCreator","ProfileStatus","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileDataReduxForm","_ref","profile","error","createField","Input","type","keys","contacts","ProfileData","_ref2","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contact","contactTitle","contactValue","Contact","_ref3","ProfileInfo","savePhoto","saveProfile","Preloader","photos","large","userPhoto","target","files","ProfileInfo_ProfileDataForm","initialValues","formData","then","ProfileInfo_ProfileData","ProfileStatusWithHooks","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","params","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","components_Profile_Profile","assign","compose","WrappedComponent","useParams"],"mappings":"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","file":"static/js/2.78016eab.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1nZLT\",\"contact\":\"ProfileInfo_contact__1_sKC\",\"formSummaryError\":\"ProfileInfo_formSummaryError__2U1o-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1N7No\",\"posts\":\"MyPosts_posts__OyGK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3EyHA\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport avatar from '../../../../assets/images/Avatar.png'\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={avatar} alt=\"Avatar\" />\r\n            {props.message}\r\n            <div>\r\n                <img src=\"https://ps.w.org/like-dislike-plus-counter/assets/icon-256x256.png?rev=1896852\" alt=\"Like\" />\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength40 = maxLengthCreator(40);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    placeholder='Enter your post'\r\n                    name=\"newPostText\"\r\n                    component={Textarea}\r\n                    spellCheck=\"false\"\r\n                    validate={[required, maxLength40]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({ form: \"addPostForm\" })(AddPostForm)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />);\r\n\r\n    const addPost = values => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostReduxForm onSubmit={addPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <b>Status</b>: <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n                </div >\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        value={status} />\r\n                </div >\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import React from \"react\";\r\nimport { createField, Input, Textarea } from \"../../common/FormsControls/FormsControls\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport s from './ProfileInfo.module.css';\r\n\r\n\r\nconst ProfileDataForm = ({ handleSubmit, profile, error }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {<div><button>edit</button></div>}\r\n            {error && <div className={s.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>Full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, { type: \"checkbox\" })}\r\n            </div>\r\n            <div>\r\n                <b>My professional skills</b>: {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>About me</b>:  {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                    return <div key={key} className={s.contact}>\r\n                        <b>{key}: {createField(key, \"contacts.\" + key, [], Input)} </b>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst ProfileDataReduxForm = reduxForm({ form: \"edit-profile\" })(ProfileDataForm);\r\n\r\nexport default ProfileDataReduxForm;","import React, { useState } from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport ProfileDataForm from './ProfileDataForm';\r\nimport userPhoto from '../../../assets/images/user.png';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile }) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files[0]) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(\r\n      () => {\r\n        setEditMode(false);\r\n      }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large || userPhoto} alt='Avatar' />\r\n        {isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\r\n\r\n        {editMode\r\n          ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n          : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner} />}\r\n\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n\r\nconst ProfileData = ({ profile, isOwner, goToEditMode }) => {\r\n  return (\r\n    <div>\r\n      {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n      <div>\r\n        <b>Full name</b>: {profile.fullName}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n      </div>\r\n      {profile.lookingForAJob &&\r\n        <div>\r\n          <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n        </div>\r\n      }\r\n      <div>\r\n        <b>About me</b>: {profile.aboutMe}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n          return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Contact = ({ contactTitle, contactValue }) => {\r\n  return <div className={s.contact}><b>{contactTitle}</b>:{contactValue}</div>\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n  return <div>\r\n    <ProfileInfo isOwner={props.isOwner}\r\n      savePhoto={props.savePhoto}\r\n      profile={props.profile}\r\n      status={props.status}\r\n      saveProfile={props.saveProfile}\r\n      updateStatus={props.updateStatus} />\r\n    <MyPostsContainer />\r\n  </div >\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/profileReducer';\r\nimport { useParams } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\n\r\nconst withRouter = (WrappedComponent) => (props) => {\r\n  const params = useParams();\r\n  return (\r\n    <WrappedComponent {...props} params={params} />\r\n  );\r\n}\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.params.userId !== prevProps.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Profile {...this.props}\r\n          isOwner={!this.props.params.userId}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n          savePhoto={this.props.savePhoto} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}