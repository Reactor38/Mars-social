{"version":3,"sources":["components/hoc/withAuthRedirect.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","Object","C_Users_Komp_Desktop_ReactRedux_Mars_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_Komp_Desktop_ReactRedux_Mars_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_Komp_Desktop_ReactRedux_Mars_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","C_Users_Komp_Desktop_ReactRedux_Mars_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","C_Users_Komp_Desktop_ReactRedux_Mars_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","React","connect","module","exports","postsBlock","posts","item","descriptionBlock","Post","react_default","className","s","src","avatar","alt","message","likesCount","maxLength40","maxLengthCreator","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","Textarea","spellCheck","validate","required","MyPosts","memo","postsElements","map","p","MyPosts_Post_Post","id","values","addPost","newPostText","MyPostsContainer","profilePage","dispatch","addPostActionCreator","ProfileStatus","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","_ref","profile","isOwner","savePhoto","Preloader","photos","large","userPhoto","type","target","files","ProfileStatusWithHooks","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","params","authorizedUserId","getUserProfile","getStatus","refreshProfile","prevProps","components_Profile_Profile","assign","compose","WrappedComponent","useParams"],"mappings":"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","file":"static/js/2.86ef65a3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login' />\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1N7No\",\"posts\":\"MyPosts_posts__OyGK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__3EyHA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1nZLT\"};","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport avatar from '../../../../assets/images/Avatar.png'\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={avatar} alt=\"Avatar\" />\r\n            {props.message}\r\n            <div>\r\n                <img src=\"https://ps.w.org/like-dislike-plus-counter/assets/icon-256x256.png?rev=1896852\" alt=\"Like\" />\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FormsControls/FormsControls';\r\n\r\nconst maxLength40 = maxLengthCreator(40);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    placeholder='Enter your post'\r\n                    name=\"newPostText\"\r\n                    component={Textarea}\r\n                    spellCheck=\"false\"\r\n                    validate={[required, maxLength40]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostReduxForm = reduxForm({ form: \"addPostForm\" })(AddPostForm)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = props.posts.map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount} />);\r\n\r\n    const addPost = values => {\r\n        props.addPost(values.newPostText);\r\n    };\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddPostReduxForm onSubmit={addPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\n\r\nexport default MyPosts;","import { connect } from 'react-redux';\r\nimport { addPostActionCreator } from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n                </div >\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange}\r\n                        autoFocus={true}\r\n                        onBlur={deactivateEditMode}\r\n                        value={status} />\r\n                </div >\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport userPhoto from '../../../assets/images/user.png';\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto }) => {\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files[0]) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large || userPhoto} alt='Avatar' />\r\n        {isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div >\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport s from './Profile.module.css';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\n\r\nconst Profile = (props) => {\r\n  return <div>\r\n    <ProfileInfo isOwner={props.isOwner}\r\n      savePhoto={props.savePhoto}\r\n      profile={props.profile}\r\n      status={props.status}\r\n      updateStatus={props.updateStatus} />\r\n    <MyPostsContainer />\r\n  </div >\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto } from '../../redux/profileReducer';\r\nimport { useParams } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../hoc/withAuthRedirect';\r\n\r\nconst withRouter = (WrappedComponent) => (props) => {\r\n  const params = useParams();\r\n  return (\r\n    <WrappedComponent {...props} params={params} />\r\n  );\r\n}\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.params.userId !== prevProps.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <Profile {...this.props}\r\n          isOwner={!this.props.params.userId}\r\n          profile={this.props.profile}\r\n          status={this.props.status}\r\n          updateStatus={this.props.updateStatus}\r\n          savePhoto={this.props.savePhoto} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto }),\r\n  withRouter,\r\n  withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}